unit uDAOPaises;

interface
uses uDAO, uColPaises, uPaises, Data.DB, System.SysUtils, Datasnap.DBClient;
{Data.DB, uDAO, uDM, uPaises, System.SysUtils, Datasnap.DBClient;}
  type DAOPaises = class   (DAO)
    private
    protected
    public
      constructor CrieObj;
      function GetDS: TDataSource;                override;
      function Salvar(pObj: TObject): string;     override;
      function Carregar(pObj: TObject): string;   override;
      function Pesquisar(pChave: string): string; override;
      function Excluir(pObj: TObject): string;    override;
      destructor Destrua_se;
  end;

implementation

{ DAOPaises }

constructor DAOPaises.CrieObj;
begin
  inherited;
end;

function DAOPaises.Carregar(pObj: TObject): string;
var mPais : Paises;
begin
  mPais := Paises(pObj);
  mPais.SetCodigo(umDM.qPaises.FieldByName('CODPAIS').value);
  mPais.SetPais(umDM.qPaises.FieldByName('PAIS').AsString);
  mPais.SetDDI(umDM.qPaises.FieldByName('DDI').AsString);
  mPais.SetSigla(umDM.qPaises.FieldByName('SIGLA').AsString);
  mPais.SetMoeda(umDM.qPaises.FieldByName('MOEDA').AsString);
end;

function DAOPaises.GetDS: TDataSource;
begin
    result := umDm.DSPaises;
end;

function DAOPaises.Pesquisar(pChave: string): string;
var mSql: string;
begin
  if pChave <> '' then
    if ehNumero(pChave) then
      mSql := 'select * from paises where codpais = '+quotedstr(pChave)
    else
      mSql := 'select * from Paises where pais = '+quotedstr(pChave)+' order by pais'
  else
    mSql := 'select * from Paises order by pais';
  umDM.qPaises.Active := false;
  umDM.qPaises.SQL.Text := mSql;
  umDM.qPaises.Open();
end;

function DAOPaises.Salvar(pObj: TObject): string;
var
   mSql  : string;
   mPais : Paises;
begin
    try
      umDM.FDTrans.StartTransaction;
      mPais := Paises(pObj);
      with umDM.QPaises do
      begin
        if mPais.getCodigo = 0 then
        mSql := 'insert into paises (pais, ddi, sigla, moeda) values ( :Pais, :ddi, :sigla, :moeda)'
        else
        begin
          mSql := 'update Paises set pais = :Pais , ddi = :ddi, sigla = :sigla, moeda = :moeda';
          mSql := mSql + 'where codPais = :CodPais;';
        end;
        umDM.QPaises.SQL.Clear;
        umDM.QPaises.SQL.Add(mSql);
        ParamByName('Pais').Value := mPais.getPais;
        ParamByName('DDI').Value := mPais.getDDI;
        ParamByName('SIGLA').Value := mPais.getSigla;
        ParamByName('MOEDA').Value := mPais.GetMoeda;

        ExecSQL;
      end;
      umDM.FDTrans.Commit;
    except
      umDM.FDTrans.Rollback;
end;
end;

destructor DAOPaises.Destrua_se;
begin

end;
function DAOPaises.Excluir(pObj: TObject): string;
begin

end;

end.
